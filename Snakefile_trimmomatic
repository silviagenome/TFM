import os
import glob

configfile: "config/config.yaml"

SAMPLE,FRR = glob_wildcards("rawReads/{sample}_{frr}_raw.fastq.gz")

rule all:
    input:
      expand("trimmed/{sample}_{frr}_fastq.gz", sample=SAMPLE, frr=FRR),
      expand("trimmed/{sample}_{frr}_unpaired.fastq.gz", sample=SAMPLE, frr=FRR)

rule trimmomatic:
    input:
        r1="rawReads/{sample}_R1_raw.fastq.gz",
        r2="rawReads/{sample}_R2_raw.fastq.gz"
    output: 
        r1="trimmed/{sample}_R1_fastq.gz", 
        r2="trimmed/{sample}_R2_fastq.gz",
        # reads where trimming entirely removed the mate
        r1_unpaired="trimmed/{sample}_R1_unpaired.fastq.gz",
        r2_unpaired="trimmed/{sample}_R2_unpaired.fastq.gz"
    conda:
        "envs/trimmomatic.yaml"
    log:
        "logs/trimmomatic/{sample}.log"
    params:
         # list of trimmers (see manual)
        trimmer=["TRAILING:3"],
        # optional parameters
        extra="",
        compression_level="-9"
    threads:
        32
    resources:
        mem_mb=1024
    wrapper:
        "v1.23.1/bio/trimmomatic/pe"
