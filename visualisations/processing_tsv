#!/usr/bin/env python

#This script is used to create a TSV table with the padj and log2foldchange values of the lncRNAs across all the different analyses

import os
import csv


file_path = 'tabla_TFM_graphs.tsv'

analysis_to_tissue = {}

# Abrir el archivo y leer los datos
with open(file_path, 'r') as file:
    reader = csv.DictReader(file, delimiter='\t')
    for row in reader:
        analysis = row['ANALYSIS']
        tissue = row['TISSUE']
        analysis_to_tissue[analysis] = tissue

def parse_tsv(file_path):
    data = {}
    with open(file_path, 'r', newline='') as tsvfile:
        reader = csv.DictReader(tsvfile, delimiter='\t')
        for row in reader:
            try:
                ensembl_id = row['ensembl_gene_id']
                log2FoldChange = float(row['log2FoldChange'])
                padj = float(row['padj'])
                if abs(log2FoldChange) > 1 and padj < 0.05:
                    data[ensembl_id] = log2FoldChange
            except ValueError:
                pass
    return data

def process_files(folder_path):
    file_data = {}
    for filename in os.listdir(folder_path):
        if filename.endswith('.tsv'):
            tsv_path = os.path.join(folder_path, filename)
            tsv_data = parse_tsv(tsv_path)
            file_data[filename] = tsv_data

    ensembl_ids = set()
    for tsv_data in file_data.values():
        ensembl_ids.update(tsv_data.keys())

    result = []
    for ensembl_id in ensembl_ids:
        row = {'ensembl_gene_id': ensembl_id}
        for filename, tsv_data in file_data.items():
            column_name = filename.split("-")[-2:]
            column_name = "-".join(column_name)
            column_name = column_name.rsplit(".", 1)[0]
            
            if "-" in column_name:
                number = column_name.split("-", 1)[0]
                if number in analysis_to_tissue:
                    tissue = analysis_to_tissue[number]
                    column_name = f"{number}-{tissue}"
            
            row[column_name] = tsv_data.get(ensembl_id, 0)
        result.append(row)

    return result

folder_path = '/home/alumno15/TFM/results-keep-lnc'
result = process_files(folder_path)


output_file = 'resultados_padj.tsv'
header = ['ensembl_gene_id'] + sorted(result[0].keys() - {'ensembl_gene_id'})
with open(output_file, 'w', newline='') as outfile:
    writer = csv.DictWriter(outfile, fieldnames=header, delimiter='\t')
    writer.writeheader()
    writer.writerows(result)

print(f"The files in '{folder_path}' have been processed, and the 'resultados_padj.tsv' file has been generated.")
